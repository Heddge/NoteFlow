@page
@using NoteFlow.Pages;
@model NoteFlow.Pages.MainPageModel;
@{
    ViewData["Title"] = "MainPage";
    Layout = null;
}

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <title>Пустая страница</title>
    <style>
        html,
        body {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }

        body {
            margin: 0;
            padding: 0;
            background-color: rgb(35, 35, 35);
            font-family: Arial, sans-serif;
        }

        .top-bar {
            position: fixed;
            width: 100%;
            height: 30px;
            top: 0;
            left: 0;
            background-color: rgb(43, 43, 43);
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 20px;
            box-sizing: border-box;
            z-index: 10000;
            border-bottom: 1px solid #555;
            -webkit-app-region: drag;
        }

        .logo-container {
            display: flex;
            align-items: center;
        }

        .logo {
            width: 40px;
            height: 40px;
        }

        .top-bar-actions {
            display: flex;
            gap: 10px;
            align-items: center;
            -webkit-app-region: no-drag;
        }

        .icon-button {
            background: none;
            border: none;
            padding: 8px;
            cursor: pointer;
            border-radius: 6px;
            transition: all 0.2s;
            color: #B9B9B9;
            -webkit-app-region: no-drag;
        }

        .icon-button:hover {
            background-color: rgba(255, 255, 255, 0.1);
            color: #FFFFFF;
        }

        .close-btn:hover {
            background-color: #e74c3c;
            color: white;
        }

        .content {
            margin-top: 80px;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-grow: 1;
        }

        .new-note {
            position: absolute;
            width: 35vw;
            height: 45vh;
            left: 19vw;
            top: 36vh;
        }

        .note-container {
            position: absolute;
            width: 100%;
            height: 100%;
            background: #303030;
            border-radius: 30px;
        }

        .note-input-area {
            position: absolute;
            width: 96%;
            height: 67%;
            left: 2%;
            top: 30%;
            background: #393939;
            border-radius: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .text-input {
            width: 90%;
            height: 80%;
            background: transparent;
            border: none;
            font-family: 'Century Gothic';
            font-style: normal;
            font-weight: 400;
            font-size: 2vw;
            line-height: 1.2;
            letter-spacing: -0.02em;
            color: #B9B9B9;
            resize: none;
            outline: none;
        }

        .text-input::placeholder {
            color: #B9B9B9;
        }

        .note-title-input {
            position: absolute;
            width: 65%;
            left: 5%;
            top: 10%;
            font-family: 'Century Gothic';
            font-weight: 700;
            font-size: 2.7vw;
            color: #B9B9B9;
            background: transparent;
            border: none;
            outline: none;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            padding: 0;
            margin: 0;
        }

        .plus-icon {
            position: absolute;
            width: 2.5vw;
            height: 2.5vw;
            left: 85%;
            top: 12%;
            cursor: pointer;
        }

        .icon {
            position: absolute;
            width: 58%;
            height: 58%;
            left: 21%;
            top: 21%;
            border: 0.3vw solid #BABABA;
        }

        .greeting-container {
            position: absolute;
            width: 80vw;
            height: 30vh;
            left: 19vw;
            top: 4vh;
        }

        .rectangle-3 {
            position: absolute;
            width: 100%;
            height: 100%;
            background: #303030;
            border-radius: 30px;
        }

        .rectangle-4 {
            position: absolute;
            width: 97%;
            height: 35%;
            left: 1%;
            top: 63%;
            background: #262626;
            border-radius: 30px;
        }

        .welcome-text {
            position: absolute;
            width: 60%;
            left: 3%;
            top: 65%;
            font-family: 'Century Gothic', sans-serif;
            font-weight: 400;
            font-size: 4vw;
            color: #FFFFFF;
            margin: 0;
            line-height: 1.2;
        }

        .logo {
            width: 40px;
            height: 40px;
            margin-right: 15px;
        }
    </style>
</head>

<body>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="" asp-page="/Message">Сохранить текст</a>
    </li>
    <nav class="top-bar">
        <div class="logo-container">
            <img src="/Images/Logo.svg" class="logo" alt="NoteFlow" />
        </div>

        <div class="top-bar-actions">
            <button class="icon-button" title="Свернуть" id="minimizeBtn">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M5 12h14" stroke-width="2" stroke-linecap="round" />
                </svg>
            </button>

            <button class="icon-button" title="Развернуть" id="maximizeBtn">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <rect x="3" y="3" width="18" height="18" rx="2" stroke-width="2" />
                </svg>
            </button>

            <button class="icon-button close-btn" title="Закрыть" id="closeBtn">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M18 6L6 18M6 6l12 12" stroke-width="2" stroke-linecap="round" />
                </svg>
            </button>
        </div>
    </nav>

    <div class="greeting-container">
        <div class="rectangle-3"></div>
        <div class="rectangle-4"></div>
        <div class="welcome-text">Добро пожаловать!</div>
    </div>

    <div class="new-note">
        <div class="note-container"></div>
        <div class="note-input-area">
            <form method="post">
                <textarea name="Text" class="text-input" placeholder="Введите текст">@Model.Text</textarea>
                <button type="submit" style="
                    position: absolute;
                    bottom: 10px;
                    right: 10px;
                    background: #abb3ab;
                    color: white;
                    border: none;
                    padding: 8px 16px;
                    border-radius: 5px;
                    cursor: pointer;">
                    Сохранить
                </button>
            </form>
        </div>
        <input type="text" class="note-title-input" value="Новая заметка" maxlength="20">
        <div class="plus-icon" id="addNoteBtn">
            <div class="icon"></div>
        </div>
    </div>
    @if (!string.IsNullOrEmpty(Model.Message))
    {
        <div data-auto-hide style="
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0,0,0,0.8);
            color: white;
            padding: 20px;
            border-radius: 10px;
            z-index: 10000;
            transition: opacity 0.5s ease;">
            @Model.Message
        </div>
    }
    <script>
        // Автоматическое скрытие сообщения через 3 секунды
        document.addEventListener('DOMContentLoaded', function () {
            const messageElement = document.querySelector('[data-auto-hide]');
            if (messageElement) {
                setTimeout(() => {
                    messageElement.style.opacity = '0';
                    setTimeout(() => messageElement.remove(), 500);
                }, 3000);
            }

            // Редирект на страницу редактирования при клике на плюс
            document.getElementById('addNoteBtn').addEventListener('click', function () {
                window.location.href = '/EditNote';
            });
        });
    </script>

    <<script>
        // Проверяем что мы в Electron среде
        if (typeof require !== 'undefined') {
        const { ipcRenderer } = require('electron');

        document.getElementById('minimizeBtn').addEventListener('click', () => {
        ipcRenderer.send('minimize-window');
        });

        document.getElementById('maximizeBtn').addEventListener('click', () => {
        ipcRenderer.send('maximize-window');
        });

        document.getElementById('closeBtn').addEventListener('click', () => {
        ipcRenderer.send('close-window');
        });
        } else {
        console.log('Not in Electron environment');
        }
        </script>
</body>

</html>